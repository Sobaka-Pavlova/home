---
- name: Set variables
  set_fact:
    dir_data_app: /data/cronn

- name: Create cronn directory
  file:
    path: "{{ dir_data_app }}"
    state: directory
    owner: "{{ autouser.name }}"
    group: "{{ autouser.name }}"
    mode: '0775'

- name: Create scripts directory
  file:
    path: "{{ dir_data_app }}/scripts"
    state: directory
    owner: "{{ autouser.name }}"
    group: "{{ autouser.name }}"
    mode: '0775'

- name: Create data-backup directory
  file:
    path: /data_backup
    state: directory
    owner: root
    group: "{{ autouser.name }}"
    mode: '0775'

- name: Copy scripts
  template:
    src: "{{ item }}"
    dest: "{{ dir_data_app }}/scripts/{{ item | basename | regex_replace('\\.j2$', '') }}"
    group: "{{ autouser.name }}"
    mode: "0774"
  with_fileglob:
    - "templates/*.j2"

- name: Copy crontab file
  copy:
    src: .
    dest: "{{ dir_data_app }}/"
    owner: "{{ autouser.name }}"
    group: "{{ autouser.name }}"
    mode: '0664'

- name: Pull the latest version of Docker image
  docker_image:
    name: kszakharov/cronn
    source: pull
    force_source: true
  register: image_pull

- name: Start a cronn container
  docker_container:
    name: cronn
    image: kszakharov/cronn
    restart_policy: unless-stopped
    volumes:
      - "{{ dir_data_app }}/crontab:/srv/crontab:ro"
      - "{{ dir_data_app }}/scripts:/scripts"
      - /home/{{ autouser.name }}/.ssh/id_ed25519:/home/app/.ssh/id_ed25519:ro
      - /data_backup:/data_backup
    dns_servers:
      - "{{ dns }}"
    dns_search_domains:
      - home
    env:
      TIME_ZONE: "{{ timezone }}"
      APP_UID: "{{ autouser.uid }}"
